#!/bin/bash
#************************************************************************
#* Program History:                                                     *
#*                                                                      *
#* Client Name  : TMAP-EM                                               *
#* System       : Regional FISM for TKM                                 *
#* Module       : Data Purging   Sample Program                         *
#* Program ID   : DBCleanUP_FISM.sh                                     *
#* Program Name : DB Table data Purging                                 *
#* Description  : DB Table data Purging                                 *
#*                                                                      *
#* Environment  : Sun Solaris ver 5.9 / Oracle Release 9.2.0.1.0        *
#* Language     : Shell Scripting Language                              *
#* Author       : Y.Asaka                                               *
#* Version      : 1.00                                                  *
#* Creation Date: 2007/01/20                                            *
#*                                                                      *
#* Call Interface :                                                     *
#*     TableCleanUp [-i] [-m Month ]                                  *
#* Input Parameters :                                                   *
#*     -m  ; Force to Use Keeping Period Month                          *
#*           You can use as the Table CleanUP                           *
#*     -i  ; Initilize Parking / Result Tables                          *
#*                                                                      *
#* Update History  Refix Date  Person in Charge      Description        *
#* 2007.01.20 Y.Asaka UPD: Standarize the coding style                  *
#* 2007.01.26 Y.Asaka UPD: Set Tables for FISM                          *
#* 2007.01.29 Y.Asaka UPD: Set APL_ID & Put Process Information         *
#* 2007.03.30 R.Patricio/O.Wachawong UPD : Finalize tables              *
#* 2010.04.21 Y.Asaka UPD: Correct "DB Stastic Update"                  *
#* 2010.04.21 Y.Asaka Add: Index Rebuild  as the optional               *
#* Copyright(C) 2006-TOYOTA Motor Corporation. All Rights Reserved.     *
#************************************************************************
# ------------------------------------------------------------------
set -x
# ==================================================================
## Common Enviroment Setting
# ==================================================================
if [ ! "${ORACLE_HOME}" ];then
    source $HOME/infra.env
fi
if [ ! "${DB_SID}" ];then
    source $HOME/std.env
    source $HOME/apl.env
fi
#----------------------------------------------------------------------
CMD=`basename $0`
CNAME=`echo $CMD | cut -d. -f1`
umask 000

# ==================================================================
V_APL_ID=`sqlplus -s ${DB_USER}/${DB_PASSWD}@${DB_SID} << APLIDEOF
  set heading off feedback off verify off
  SELECT SEQ_PROCESS_NO.nextval from dual;
APLIDEOF`

# ==================================================================
# Function to write directly to the TB_L_LOGGER
# usage : LogDetailIns  V_STATUS V_MESSAGE_TYPE V_MESSAGE
# ==================================================================
LogDetailIns () {
V_MODULE_ID=DL0Z
V_FUNCTION_ID=BDL0Z99
V_USERCRE=SYSTEM
V_MESSAGE_TYPE=$2
V_MESSAGE=$3
## D_HODTCRE        #  SYSDATE
## N_SEQ_NO=001     #  Should be like SQ_GEN_LOGNO.NEXTVAL
V_MESSAGE_CODE=MSCOM
V_STATUS=$1
## V_APL_ID         # Should be like SEQ_PROCESS_NO.nextval

sqlplus -s  ${DB_USER}/${DB_PASSWD}@${DB_SID} << SQLLOGEOF
INSERT INTO TB_L_LOGGER \
(V_MODULE_ID,V_FUNCTION_ID,V_USERCRE,V_MESSAGE_TYPE,V_MESSAGE,D_HODTCRE,N_SEQ_NO,V_MESSAGE_CODE,V_STATUS,V_APL_ID ) \
VALUES ('${V_MODULE_ID}','${V_FUNCTION_ID}','${V_USERCRE}','${V_MESSAGE_TYPE}','${V_MESSAGE}',SYSDATE,\
SQ_GEN_LOGNO.NEXTVAL,'${V_MESSAGE_CODE}','${V_STATUS}',TRIM(${V_APL_ID}));
exit;
SQLLOGEOF
}

#----------------------------------------------------------------------
# Error Logging File
TIMESTAMP=`date "+%Y%m%d%H%M%S"`
ERRLOGFIL=${APP_LOG_DIR}/${CNAME}${TIMESTAMP}.log

# ==================================================================
## Option Check
# ==================================================================
KEEPMONTH_LOG=6
KEEPMONTH_TRANS03=3
KEEPMONTH_TRANS06=6
KEEPMONTH_TRANS12=12
KEEPMONTH_TRANS24=24
TYP=NORM
for OPT in $* ; do
    case $OPT in
    -i|-I)
        shift
        TYP=INIT
        ;;
    -m|-M)
        shift
        KEEPMONTH_LOG=$1
        KEEPMONTH_STK=$1
        KEEPMONTH_FIN=$1
        shift
        ;;
    -*)
        echo "Parameter Eror ; ${CMD} [-m Month] "
        exit ${EXIT_ERROR}
        ;;
    *) 
        break
        ;;
    esac
done


# -----------------------------------------------------------------------------  
#  Start message
# -----------------------------------------------------------------------------  
YMDHMS=`date "+%Y/%m/%d %H:%M:%S"`
echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging Started"
echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging Started"  > ${ERRLOGFIL}
LogDetailIns "S" "I" "${CMD} : SystemID=${SYSTEM_ID} Table Purging Started"

# -----------------------------------------------------------------------------  
## Data Purging ; Delete Data based on Keeping Period
# -----------------------------------------------------------------------------  
case $TYP in
NORM)
sqlplus -s  ${DB_USER}/${DB_PASSWD}@${DB_SID} << SQLDELETEEOF
SET LINESIZE 140
SET PAGESIZE 0

DELETE FROM TB_L_LOGGER                            WHERE D_HODTCRE < ADD_MONTHS(SYSDATE,-${KEEPMONTH_LOG}) ;
DELETE FROM TB_L_EXCEL_DOWNLOAD_FILE               WHERE UPDATE_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_LOG}) ;
DELETE FROM TB_L_EXCEL_DOWNLOAD_STATUS             WHERE UPDATE_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_LOG}) ;
DELETE FROM TB_L_BATCH_LOGS                        WHERE PROC_TIME < ADD_MONTHS(SYSDATE,-${KEEPMONTH_LOG}) ;

DELETE FROM TB_M_SEND_RESEND                       WHERE UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS06}) ;

DELETE FROM TB_P_AVSL_SHIP_SCHED_A                 WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_AVSL_SHIP_SCHED_B                 WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_AVSL_SHIP_SCHED_C                 WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_CONTAINER_LIST                WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_HAISEN                        WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_MARKS_NOS                     WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_MOD_CASE                      WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_MOD_CONTENT_CPO               WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_MOD_CONTENT_SPO               WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_ORDER_CPO                     WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_ORDER_REG                     WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_ORDER_SPO                     WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_INV_SELLER_INVOICE                WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_CPO                         WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_EKB_DAILY                   WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_EKB_FC                      WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_REG                         WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_SPO                         WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_ORDER_TNQC                        WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_PCK_PACKING_PLAN                  WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_VAN_CARGO                         WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_VAN_CONTAINER                     WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;
DELETE FROM TB_P_VAN_HAISEN                        WHERE MOVED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;

DELETE FROM TB_R_AVSL_SHIP_SCHED_A_SHPMNT A_SHPMNT WHERE EXISTS (SELECT 'X' FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = A_SHPMNT.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_AVSL_SHIP_SCHED_B_CARGO B_CARGO   WHERE EXISTS (SELECT 'X' FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = B_CARGO.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_AVSL_SHIP_SCHED_B_PARTS B_PARTS   WHERE EXISTS (SELECT 'X' FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = B_PARTS.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_AVSL_SHIP_SCHED_C_CARGO C_CARGO   WHERE EXISTS (SELECT 'X' FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = C_CARGO.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_AVSL_SHIP_SCHED_C_PARTS C_PARTS   WHERE EXISTS (SELECT 'X' FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = C_PARTS.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_AVSL_SHIP_SCHED_A_SCHDL           WHERE SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_BVSL_SHIP_SCHED_A_SHPMNT A_SHPMNT WHERE EXISTS (SELECT 'X' FROM TB_R_BVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = A_SHPMNT.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_BVSL_SHIP_SCHED_B_CARGO B_CARGO   WHERE EXISTS (SELECT 'X' FROM TB_R_BVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = B_CARGO.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_BVSL_SHIP_SCHED_B_PARTS B_PARTS   WHERE EXISTS (SELECT 'X' FROM TB_R_BVSL_SHIP_SCHED_A_SCHDL A_SCHDL WHERE A_SCHDL.SCHDL_SEQ = B_PARTS.SCHDL_SEQ AND A_SCHDL.SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_BVSL_SHIP_SCHED_A_SCHDL           WHERE SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;

DELETE FROM TB_R_EMAIL                             WHERE UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ; 
DELETE FROM TB_T_EMAIL_PRICE_IECMP                 WHERE UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS03}) ;

## TB_R_FINANCE_DC
## TB_R_FINANCE_H

DELETE FROM TB_R_INV_MOD_CASE_INFO CASE_INFO       WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CASE_INFO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CASE_INFO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_ENGINE_LIST ENGINE_LIST       WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ENGINE_LIST.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ENGINE_LIST.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_MOD_CONTENT_SPO CONTENT_SPO   WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_SPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_SPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_MOD_CONTENT_CPO CONTENT_CPO   WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_CPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_CPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_MOD_CONTENT_REG CONTENT_REG   WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_REG.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_REG.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_MOD_CASE MOD_CASE             WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = MOD_CASE.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = MOD_CASE.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_CONTAINER_LIST CONTAINER_LIST WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTAINER_LIST.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTAINER_LIST.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_ORDER_SPO ORDER_SPO           WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_SPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_SPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_ORDER_CPO ORDER_CPO           WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_CPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_CPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_ORDER_REG ORDER_REG           WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_REG.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_REG.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_MARKS_NOS MARKS_NOS           WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = MARKS_NOS.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = MARKS_NOS.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_INV_SELLER_INVOICE INVOICE        WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = INVOICE.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = INVOICE.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ENGINE_LIST ENGINE_LIST      WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ENGINE_LIST.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ENGINE_LIST.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ENGINE_LIST ENGINE_LIST      WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = ENGINE_LIST.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = ENGINE_LIST.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_BL_DRAFT_D  DRAFT_D          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = DRAFT_D.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = DRAFT_D.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_BL_DRAFT_D  DRAFT_D          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = DRAFT_D.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = DRAFT_D.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_BL_DRAFT_H  DRAFT_H          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = DRAFT_H.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = DRAFT_H.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_BL_DRAFT_H  DRAFT_H          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = DRAFT_H.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = DRAFT_H.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_SPO CONTENT_SPO  WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_SPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_SPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_SPO CONTENT_SPO  WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CONTENT_SPO.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CONTENT_SPO.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_CPO CONTENT_CPO  WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_CPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_CPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_CPO CONTENT_CPO  WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CONTENT_CPO.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CONTENT_CPO.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_REG CONTENT_REG  WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTENT_REG.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTENT_REG.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CONTENT_REG CONTENT_REG  WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CONTENT_REG.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CONTENT_REG.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CASE MOD_CASE            WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = MOD_CASE.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = MOD_CASE.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MOD_CASE MOD_CASE            WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = MOD_CASE.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = MOD_CASE.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_CONTAINER_LIST CONTAIN_LIST  WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = CONTAIN_LIST.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = CONTAIN_LIST.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_CONTAINER_LIST CONTAIN_LIST  WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CONTAIN_LIST.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CONTAIN_LIST.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_SPO ORDER_SPO          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_SPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_SPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_SPO ORDER_SPO          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = ORDER_SPO.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = ORDER_SPO.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_CPO ORDER_CPO          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_CPO.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_CPO.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_CPO ORDER_CPO          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = ORDER_CPO.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = ORDER_CPO.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_REG ORDER_REG          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = ORDER_REG.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = ORDER_REG.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_ORDER_REG ORDER_REG          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = ORDER_REG.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = ORDER_REG.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MARKS_NOS MARKS_NOS          WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = MARKS_NOS.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = MARKS_NOS.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_MARKS_NOS MARKS_NOS          WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = MARKS_NOS.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = MARKS_NOS.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_FI_BREAK FI_BREAK            WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = FI_BREAK.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = FI_BREAK.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_FI_BREAK FI_BREAK            WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = FI_BREAK.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = FI_BREAK.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_INVOICE INVOICE              WHERE EXISTS (SELECT 'X' FROM TB_R_INV_HAISEN INV_HAISEN WHERE INV_HAISEN.HAISEN_NO = INVOICE.HAISEN_NO AND INV_HAISEN.HAISEN_MONTH_YEAR = INVOICE.HAISEN_MONTH_YEAR AND INV_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_TMAP_INVOICE INVOICE              WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = INVOICE.XD_HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = INVOICE.XD_HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_VAN_TTMAP_INVOICE INVOICE         WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = INVOICE.HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = INVOICE.HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_VAN_CARGO CARGO                   WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CARGO.HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CARGO.HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_VAN_CONTAINER CONTAINER           WHERE EXISTS (SELECT 'X' FROM TB_R_VAN_HAISEN VAN_HAISEN WHERE VAN_HAISEN.HAISEN_NO = CONTAINER.HAISEN_NO AND VAN_HAISEN.HAISEN_MONTH_YEAR = CONTAINER.HAISEN_MONTH_YEAR AND VAN_HAISEN.BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_VAN_HAISEN                        WHERE BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_INV_HAISEN                        WHERE BL_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_CPO                         WHERE ORDER_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_EKB_DAILY                   WHERE SHIP_DT_TIME < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS12}) ;
DELETE FROM TB_R_ORDER_EKB_FC                      WHERE PACKING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS12}) ;
DELETE FROM TB_R_ORDER_FC_PAMS                     WHERE PACKING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_REG_FIRM                    WHERE PACKING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_REG_TENT                    WHERE PACKING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_SPO_D SPO_D                 WHERE EXISTS (SELECT 'X' FROM TB_R_ORDER_SPO_H SPO_H WHERE SPO_H.OCN = SPO_D.OCN AND SPO_H.UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24})) ;
DELETE FROM TB_R_ORDER_SPO_H                       WHERE UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_ORDER_TNQC                        WHERE PACKING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_PCK_CPO_REPLY                     WHERE UPDATED_DT < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;

## TB_R_PROFORMA_INV_D
## TB_R_PROFORMA_INV_H

DELETE FROM TB_R_SHIP_INV_MATCH                    WHERE SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;
DELETE FROM TB_R_SHIP_SCHED_MATCH                  WHERE SHIPPING_MONTH < ADD_MONTHS(SYSDATE,-${KEEPMONTH_TRANS24}) ;

## TB_R_STOCK_TAKING_RESULT
## TB_R_TMAP_BL_DRAFT_H
## TB_R_TMAP_CONTAINER_LIST
## TB_R_TMAP_MOD_CONTENT_REG

## TB_T_AVSL_SHIP_SCHED_A_SHPMNT
## TB_T_BVSL_SHIP_SCHED_A_SCHDL
## TB_T_BVSL_SHIP_SCHED_A_SHPMNT
## TB_T_BVSL_SHIP_SCHED_B_CARGO
## TB_T_BVSL_SHIP_SCHED_B_PARTS
## TB_T_CHOOSE_ORDER_CPO
## TB_T_CHOOSE_ORDER_REG
## TB_T_CHOOSE_ORDER_SPO
## TB_T_EXP_REPLY_INCOMPLETE
## TB_T_EXP_REPLY_INCOMPLETE_MP
## TB_T_EXP_REPLY_SHIPMENT
## TB_T_EXP_REPLY_SHIPMENT_MP
## TB_T_EXP_REPLY_SPO
## TB_T_INVOICE_INFO
## TB_T_INV_CONTAINER_LIST
## TB_T_INV_HAISEN
## TB_T_INV_MARKS_NOS
## TB_T_INV_MOD_CASE
## TB_T_INV_MOD_CONTENT_CPO
## TB_T_INV_MOD_CONTENT_REG
## TB_T_INV_MOD_CONTENT_SPO
## TB_T_INV_ORDER_CPO
## TB_T_INV_ORDER_REG
## TB_T_INV_ORDER_SPO
## TB_T_INV_SELLER_INVOICE
## TB_T_INV_UPLOAD_ORDER
## TB_T_KATASHIKI_D
## TB_T_ORDER_REG_FIRM
## TB_T_PCS_SPO_SCH
## TB_T_PRICE_COST
## TB_T_PRICE_MULTICHECK
## TB_T_PROFORMA_INV
## TB_T_SPO_D
## TB_T_STOCK_MULTICHECK
## TB_T_TMAP_MARKS_NOS

## ------------------- SPOM Table-----------------------------------------------
## TB_R_PART_LIST_STATUS
## TB_R_PART_LIST_INFO
## TB_R_PART_LIST_LOT_INFO

## TB_R_PCS
## TB_R_PCS_ACTIVITY_SCH
## TB_R_PCS_EXP_D
## TB_R_PCS_SPO_SCH

## TB_R_X_CHK_RESULT
## TB_R_CONFIRMED_PART_LIST_INFO
## TB_R_CONFIRMED_LOT_INFO

## TB_R_SPO_H
## TB_R_SPO_D
## TB_R_EXP_REPLY_SPO
## TB_R_EXP_REPLY_INCOMPLETE
## TB_R_EXP_REPLY_SHIPMENT
## TB_R_SPO_TMAP_INV
## TB_R_SPO_WORK_FLOW

## TB_R_TASK_LIST

EXIT SQL.SQLCODE ;
SQLDELETEEOF
status=$?
    ;;
INIT)
sqlplus -s  ${DB_USER}/${DB_PASSWD}@${DB_SID} << SQLTRUNCATEEOF
SET LINESIZE 140
SET PAGESIZE 0

TRUNCATE TABLE TB_H_PRICE                     ;
TRUNCATE TABLE TB_L_BATCH_LOGS                ;
TRUNCATE TABLE TB_L_EXCEL_DOWNLOAD_FILE       ;
TRUNCATE TABLE TB_L_EXCEL_DOWNLOAD_STATUS     ;
TRUNCATE TABLE TB_L_LOGGER                    ;
TRUNCATE TABLE TB_M_ACCT_PERIOD               ;
TRUNCATE TABLE TB_M_ACTIVITY                  ;
TRUNCATE TABLE TB_M_CALENDAR                  ;
TRUNCATE TABLE TB_M_CANCELLED_FINANCE_REF     ;
TRUNCATE TABLE TB_M_COUNTRY_PORT              ;
TRUNCATE TABLE TB_M_DIRECT_LT                 ;
TRUNCATE TABLE TB_M_EXT_PERMISSION            ;
TRUNCATE TABLE TB_M_GRID_DETAIL               ;
TRUNCATE TABLE TB_M_HIST_SEQ                  ;
TRUNCATE TABLE TB_M_IECMP_D                   ;
TRUNCATE TABLE TB_M_IECMP_H                   ;
TRUNCATE TABLE TB_M_IMP_EXP_CFC_D             ;
TRUNCATE TABLE TB_M_IMP_EXP_CFC_H             ;
TRUNCATE TABLE TB_M_IMP_EXP_DEV_CODE_D        ;
TRUNCATE TABLE TB_M_IMP_EXP_DEV_CODE_H        ;
TRUNCATE TABLE TB_M_INSURANCE_RATE            ;
TRUNCATE TABLE TB_M_INTERFACE_CONFIG          ;
TRUNCATE TABLE TB_M_KATASHIKI_D               ;
TRUNCATE TABLE TB_M_KATASHIKI_H               ;
TRUNCATE TABLE TB_M_LANE                      ;
TRUNCATE TABLE TB_M_MANUAL                    ;
TRUNCATE TABLE TB_M_MAPPING_INFO              ;
TRUNCATE TABLE TB_M_MESSAGE                   ;
TRUNCATE TABLE TB_M_MODULE_D                  ;
TRUNCATE TABLE TB_M_MODULE_H                  ;
TRUNCATE TABLE TB_M_MOD_DIMENSION             ;
TRUNCATE TABLE TB_M_MPMI                      ;
TRUNCATE TABLE TB_M_PART_LIST                 ;
TRUNCATE TABLE TB_M_PERMISSION                ;
TRUNCATE TABLE TB_M_PERMISSION_VALUE          ;
TRUNCATE TABLE TB_M_PFI_FREIGHT_INS           ;
TRUNCATE TABLE TB_M_PLANT                     ;
TRUNCATE TABLE TB_M_PRICE                     ;
TRUNCATE TABLE TB_M_PRICE_EXCH_RATE           ;
TRUNCATE TABLE TB_M_ROLE_PERMISSION           ;
TRUNCATE TABLE TB_M_SCREEN_AUTH               ;
TRUNCATE TABLE TB_M_SEND_RESEND               ;
TRUNCATE TABLE TB_M_SEQ                       ;
TRUNCATE TABLE TB_M_SHIP_CO_D                 ;
TRUNCATE TABLE TB_M_SPO_BUSINESS_PARTNER      ;
TRUNCATE TABLE TB_M_SPO_PLANT                 ;
TRUNCATE TABLE TB_M_SPO_PORT                  ;
TRUNCATE TABLE TB_M_SPO_USER_INFO             ;
TRUNCATE TABLE TB_M_SYSTEM                    ;
TRUNCATE TABLE TB_M_TARIFF                    ;
TRUNCATE TABLE TB_M_TRADE_PARTNER             ;
TRUNCATE TABLE TB_M_TRADE_ROUTE               ;
TRUNCATE TABLE TB_M_USER_ROLE                 ;
TRUNCATE TABLE TB_M_WORK_FLOW_ROUTE           ;
TRUNCATE TABLE TB_M_WORK_FLOW_ROUTE_INFO      ;
TRUNCATE TABLE TB_M_XDOCK_FEE                 ;
TRUNCATE TABLE TB_M_XDOCK_LEAD_TIME           ;
TRUNCATE TABLE TB_M_XDOCK_ROUTE               ;
TRUNCATE TABLE TB_P_AVSL_SHIP_SCHED_A         ;
TRUNCATE TABLE TB_P_AVSL_SHIP_SCHED_B         ;
TRUNCATE TABLE TB_P_AVSL_SHIP_SCHED_C         ;
TRUNCATE TABLE TB_P_INV_CONTAINER_LIST        ;
TRUNCATE TABLE TB_P_INV_HAISEN                ;
TRUNCATE TABLE TB_P_INV_MARKS_NOS             ;
TRUNCATE TABLE TB_P_INV_MOD_CASE              ;
TRUNCATE TABLE TB_P_INV_MOD_CONTENT_CPO       ;
TRUNCATE TABLE TB_P_INV_MOD_CONTENT_REG       ;
TRUNCATE TABLE TB_P_INV_MOD_CONTENT_SPO       ;
TRUNCATE TABLE TB_P_INV_ORDER_CPO             ;
TRUNCATE TABLE TB_P_INV_ORDER_REG             ;
TRUNCATE TABLE TB_P_INV_ORDER_SPO             ;
TRUNCATE TABLE TB_P_INV_SELLER_INVOICE        ;
TRUNCATE TABLE TB_P_ORDER_CPO                 ;
TRUNCATE TABLE TB_P_ORDER_EKB_DAILY           ;
TRUNCATE TABLE TB_P_ORDER_EKB_FC              ;
TRUNCATE TABLE TB_P_ORDER_REG                 ;
TRUNCATE TABLE TB_P_ORDER_SPO                 ;
TRUNCATE TABLE TB_P_ORDER_TNQC                ;
TRUNCATE TABLE TB_P_PCK_PACKING_PLAN          ;
TRUNCATE TABLE TB_P_VAN_CARGO                 ;
TRUNCATE TABLE TB_P_VAN_CONTAINER             ;
TRUNCATE TABLE TB_P_VAN_HAISEN                ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_A_SCHDL   ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_A_SHPMNT  ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_B_CARGO   ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_B_PARTS   ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_C_CARGO   ;
TRUNCATE TABLE TB_R_AVSL_SHIP_SCHED_C_PARTS   ;
TRUNCATE TABLE TB_R_BVSL_SHIP_SCHED_A_SCHDL   ;
TRUNCATE TABLE TB_R_BVSL_SHIP_SCHED_A_SHPMNT  ;
TRUNCATE TABLE TB_R_BVSL_SHIP_SCHED_B_CARGO   ;
TRUNCATE TABLE TB_R_BVSL_SHIP_SCHED_B_PARTS   ;
TRUNCATE TABLE TB_R_CARGO_INFO                ;
TRUNCATE TABLE TB_R_CONFIRMED_LOT_INFO        ;
TRUNCATE TABLE TB_R_CONFIRMED_PART_LIST_INFO  ;
TRUNCATE TABLE TB_R_DISCREPANCY               ;
TRUNCATE TABLE TB_R_EMAIL                     ;
TRUNCATE TABLE TB_R_EXP_REPLY_INCOMPLETE      ;
TRUNCATE TABLE TB_R_EXP_REPLY_SHIPMENT        ;
TRUNCATE TABLE TB_R_EXP_REPLY_SPO             ;
TRUNCATE TABLE TB_R_FINANCE_DC                ;
TRUNCATE TABLE TB_R_FINANCE_H                 ;
TRUNCATE TABLE TB_R_INV_CONTAINER_LIST        ;
TRUNCATE TABLE TB_R_INV_ENGINE_LIST           ;
TRUNCATE TABLE TB_R_INV_HAISEN                ;
TRUNCATE TABLE TB_R_INV_MARKS_NOS             ;
TRUNCATE TABLE TB_R_INV_MOD_CASE              ;
TRUNCATE TABLE TB_R_INV_MOD_CASE_INFO         ;
TRUNCATE TABLE TB_R_INV_MOD_CONTENT_CPO       ;
TRUNCATE TABLE TB_R_INV_MOD_CONTENT_REG       ;
TRUNCATE TABLE TB_R_INV_MOD_CONTENT_SPO       ;
TRUNCATE TABLE TB_R_INV_ORDER_CPO             ;
TRUNCATE TABLE TB_R_INV_ORDER_REG             ;
TRUNCATE TABLE TB_R_INV_ORDER_SPO             ;
TRUNCATE TABLE TB_R_INV_SELLER_INVOICE        ;
TRUNCATE TABLE TB_R_OPENING_BALANCE           ;
TRUNCATE TABLE TB_R_ORACLE_DATA               ;
TRUNCATE TABLE TB_R_ORDER_CPO                 ;
TRUNCATE TABLE TB_R_ORDER_EKB_DAILY           ;
TRUNCATE TABLE TB_R_ORDER_EKB_FC              ;
TRUNCATE TABLE TB_R_ORDER_FC_PAMS             ;
TRUNCATE TABLE TB_R_ORDER_REG_FIRM            ;
TRUNCATE TABLE TB_R_ORDER_REG_TENT            ;
TRUNCATE TABLE TB_R_ORDER_SPO_D               ;
TRUNCATE TABLE TB_R_ORDER_SPO_H               ;
TRUNCATE TABLE TB_R_ORDER_TNQC                ;
TRUNCATE TABLE TB_R_PART_LIST_INFO            ;
TRUNCATE TABLE TB_R_PART_LIST_LOT_INFO        ;
TRUNCATE TABLE TB_R_PART_LIST_STATUS          ;
TRUNCATE TABLE TB_R_PCK_CPO_REPLY             ;
TRUNCATE TABLE TB_R_PCS                       ;
TRUNCATE TABLE TB_R_PCS_ACTIVITY_SCH          ;
TRUNCATE TABLE TB_R_PCS_EXP_D                 ;
TRUNCATE TABLE TB_R_PCS_SPO_SCH               ;
TRUNCATE TABLE TB_R_PROFORMA_INV_D            ;
TRUNCATE TABLE TB_R_PROFORMA_INV_H            ;
TRUNCATE TABLE TB_R_SHIP_INV_MATCH            ;
TRUNCATE TABLE TB_R_SHIP_SCHED_MATCH          ;
TRUNCATE TABLE TB_R_SPO_D                     ;
TRUNCATE TABLE TB_R_SPO_H                     ;
TRUNCATE TABLE TB_R_SPO_TMAP_INV              ;
TRUNCATE TABLE TB_R_SPO_WORK_FLOW             ;
TRUNCATE TABLE TB_R_STOCK_TAKING_RESULT       ;
TRUNCATE TABLE TB_R_TASK_LIST                 ;
TRUNCATE TABLE TB_R_TMAP_BL_DRAFT_D           ;
TRUNCATE TABLE TB_R_TMAP_BL_DRAFT_H           ;
TRUNCATE TABLE TB_R_TMAP_CONTAINER_LIST       ;
TRUNCATE TABLE TB_R_TMAP_ENGINE_LIST          ;
TRUNCATE TABLE TB_R_TMAP_FI_BREAK             ;
TRUNCATE TABLE TB_R_TMAP_INVOICE              ;
TRUNCATE TABLE TB_R_TMAP_MARKS_NOS            ;
TRUNCATE TABLE TB_R_TMAP_MOD_CASE             ;
TRUNCATE TABLE TB_R_TMAP_MOD_CONTENT_CPO      ;
TRUNCATE TABLE TB_R_TMAP_MOD_CONTENT_REG      ;
TRUNCATE TABLE TB_R_TMAP_MOD_CONTENT_SPO      ;
TRUNCATE TABLE TB_R_TMAP_ORDER_CPO            ;
TRUNCATE TABLE TB_R_TMAP_ORDER_REG            ;
TRUNCATE TABLE TB_R_TMAP_ORDER_SPO            ;
TRUNCATE TABLE TB_R_VAN_CARGO                 ;
TRUNCATE TABLE TB_R_VAN_CONTAINER             ;
TRUNCATE TABLE TB_R_VAN_HAISEN                ;
TRUNCATE TABLE TB_R_VAN_TTMAP_INVOICE         ;
TRUNCATE TABLE TB_R_X_CHK_RESULT              ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_A         ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_A_MP      ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_B         ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_B_MP      ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_C         ;
TRUNCATE TABLE TB_S_AVSL_SHIP_SCHED_C_MP      ;
TRUNCATE TABLE TB_S_CALENDAR                  ;
TRUNCATE TABLE TB_S_CANCEL_FINANCE            ;
TRUNCATE TABLE TB_S_CARGO_INFO                ;
TRUNCATE TABLE TB_S_COUNTRY_PORT              ;
TRUNCATE TABLE TB_S_DIRECT_LT                 ;
TRUNCATE TABLE TB_S_EXP_REPLY_SPO             ;
TRUNCATE TABLE TB_S_FINANCE_STATUS            ;
TRUNCATE TABLE TB_S_IECMP                     ;
TRUNCATE TABLE TB_S_INSURANCE_RATE            ;
TRUNCATE TABLE TB_S_INV_CONTAINER_LIST        ;
TRUNCATE TABLE TB_S_INV_CONTAINER_LIST_MP     ;
TRUNCATE TABLE TB_S_INV_HAISEN                ;
TRUNCATE TABLE TB_S_INV_HAISEN_MP             ;
TRUNCATE TABLE TB_S_INV_MARKS_NOS             ;
TRUNCATE TABLE TB_S_INV_MARKS_NOS_MP          ;
TRUNCATE TABLE TB_S_INV_MOD_CASE              ;
TRUNCATE TABLE TB_S_INV_MOD_CASE_MP           ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_CPO       ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_CPO_MP    ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_REG       ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_REG_MP    ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_SPO       ;
TRUNCATE TABLE TB_S_INV_MOD_CONTENT_SPO_MP    ;
TRUNCATE TABLE TB_S_INV_ORDER_CPO             ;
TRUNCATE TABLE TB_S_INV_ORDER_CPO_MP          ;
TRUNCATE TABLE TB_S_INV_ORDER_REG             ;
TRUNCATE TABLE TB_S_INV_ORDER_REG_MP          ;
TRUNCATE TABLE TB_S_INV_ORDER_SPO             ;
TRUNCATE TABLE TB_S_INV_ORDER_SPO_MP          ;
TRUNCATE TABLE TB_S_INV_SELLER_INVOICE        ;
TRUNCATE TABLE TB_S_INV_SELLER_INVOICE_MP     ;
TRUNCATE TABLE TB_S_KATASHIKI_D               ;
TRUNCATE TABLE TB_S_LANE                      ;
TRUNCATE TABLE TB_S_MOD_DIMENSION             ;
TRUNCATE TABLE TB_S_ORACLE_DATA               ;
TRUNCATE TABLE TB_S_ORDER_CPO                 ;
TRUNCATE TABLE TB_S_ORDER_CPO_MP              ;
TRUNCATE TABLE TB_S_ORDER_EKB_DAILY           ;
TRUNCATE TABLE TB_S_ORDER_EKB_DAILY_MP        ;
TRUNCATE TABLE TB_S_ORDER_EKB_FC              ;
TRUNCATE TABLE TB_S_ORDER_EKB_FC_MP           ;
TRUNCATE TABLE TB_S_ORDER_REG                 ;
TRUNCATE TABLE TB_S_ORDER_REG_MP              ;
TRUNCATE TABLE TB_S_ORDER_SPO                 ;
TRUNCATE TABLE TB_S_ORDER_SPO_MP              ;
TRUNCATE TABLE TB_S_ORDER_TNQC                ;
TRUNCATE TABLE TB_S_ORDER_TNQC_MP             ;
TRUNCATE TABLE TB_S_PART_LIST                 ;
TRUNCATE TABLE TB_S_PART_LIST_INFO            ;
TRUNCATE TABLE TB_S_PART_LIST_LOT_INFO        ;
TRUNCATE TABLE TB_S_PCK_CPO_REPLY             ;
TRUNCATE TABLE TB_S_PCK_CPO_REPLY_MP          ;
TRUNCATE TABLE TB_S_PCK_PACKING_PLAN          ;
TRUNCATE TABLE TB_S_PCK_PACKING_PLAN_MP       ;
TRUNCATE TABLE TB_S_PLANT                     ;
TRUNCATE TABLE TB_S_PRICE_COST                ;
TRUNCATE TABLE TB_S_SHIP_CO_D                 ;
TRUNCATE TABLE TB_S_SPO_ORDER                 ;
TRUNCATE TABLE TB_S_TARIFF                    ;
TRUNCATE TABLE TB_S_TRADE_ROUTE               ;
TRUNCATE TABLE TB_S_VAN_CARGO                 ;
TRUNCATE TABLE TB_S_VAN_CONTAINER             ;
TRUNCATE TABLE TB_S_VAN_HAISEN                ;
TRUNCATE TABLE TB_S_XDOCK_LEAD_TIME           ;
TRUNCATE TABLE TB_S_XDOCK_ROUTE               ;
TRUNCATE TABLE TB_T_AVSL_SHIP_SCHED_A_SHPMNT  ;
TRUNCATE TABLE TB_T_BVSL_SHIP_SCHED_A_SCHDL   ;
TRUNCATE TABLE TB_T_BVSL_SHIP_SCHED_A_SHPMNT  ;
TRUNCATE TABLE TB_T_BVSL_SHIP_SCHED_B_CARGO   ;
TRUNCATE TABLE TB_T_BVSL_SHIP_SCHED_B_PARTS   ;
TRUNCATE TABLE TB_T_CHOOSE_ORDER_CPO          ;
TRUNCATE TABLE TB_T_CHOOSE_ORDER_REG          ;
TRUNCATE TABLE TB_T_CHOOSE_ORDER_SPO          ;
TRUNCATE TABLE TB_T_EXP_REPLY_INCOMPLETE      ;
TRUNCATE TABLE TB_T_EXP_REPLY_INCOMPLETE_MP   ;
TRUNCATE TABLE TB_T_EXP_REPLY_SHIPMENT        ;
TRUNCATE TABLE TB_T_EXP_REPLY_SHIPMENT_MP     ;
TRUNCATE TABLE TB_T_EXP_REPLY_SPO             ;
TRUNCATE TABLE TB_T_INVOICE_INFO              ;
TRUNCATE TABLE TB_T_INV_CONTAINER_LIST        ;
TRUNCATE TABLE TB_T_INV_HAISEN                ;
TRUNCATE TABLE TB_T_INV_MARKS_NOS             ;
TRUNCATE TABLE TB_T_INV_MOD_CASE              ;
TRUNCATE TABLE TB_T_INV_MOD_CONTENT_CPO       ;
TRUNCATE TABLE TB_T_INV_MOD_CONTENT_REG       ;
TRUNCATE TABLE TB_T_INV_MOD_CONTENT_SPO       ;
TRUNCATE TABLE TB_T_INV_ORDER_CPO             ;
TRUNCATE TABLE TB_T_INV_ORDER_REG             ;
TRUNCATE TABLE TB_T_INV_ORDER_SPO             ;
TRUNCATE TABLE TB_T_INV_SELLER_INVOICE        ;
TRUNCATE TABLE TB_T_INV_UPLOAD_ORDER          ;
TRUNCATE TABLE TB_T_KATASHIKI_D               ;
TRUNCATE TABLE TB_T_ORDER_REG_FIRM            ;
TRUNCATE TABLE TB_T_PCS_SPO_SCH               ;
TRUNCATE TABLE TB_T_PRICE_COST                ;
TRUNCATE TABLE TB_T_PRICE_MULTICHECK          ;
TRUNCATE TABLE TB_T_PROFORMA_INV              ;
TRUNCATE TABLE TB_T_SPO_D                     ;
TRUNCATE TABLE TB_T_STOCK_MULTICHECK          ;
TRUNCATE TABLE TB_T_TMAP_MARKS_NOS            ;    
TRUNCATE TABLE TB_T_EMAIL_PRICE_IECMP         ;

EXIT SQL.SQLCODE ;
SQLTRUNCATEEOF
status=$?
    ;;
esac


echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging : Status= ${status}"
echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging : Status= ${status}" >> ${ERRLOGFIL}
LogDetailIns "P" "I" "${CMD} : SystemID=${SYSTEM_ID} ${YMDHMS} :${CMD} : Table Purging : Status= ${status}"

# -----------------------------------------------------------------------------
## Rebuild Index ;  This is optional
#       If we delete the huge data , it is the better to rebuild the Index
# -----------------------------------------------------------------------------
##  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Index rebuild : Started "
##  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Index rebuild : Started " >> ${ERRLOGFIL}
##  LogDetailIns "S" "I" "${CMD} : SystemID=${SYSTEM_ID} Index rebuild Started ${YMDHMS}"
##  sqlplus -s  ${DB_USER}/${DB_PASSWD}@${DB_SID} << SQLREBUILDEOF
##  SET LINESIZE 140
##  SET PAGESIZE 0
##  DECLARE
##  BEGIN
##      FOR CUR IN (SELECT INDEX_NAME FROM USER_INDEXES) LOOP
##          EXECUTE IMMEDIATE 'ALTER INDEX "' ||CUR.INDEX_NAME||'" REBUILD COALESCE ';
##      END LOOP;
##  END;
##  /
##  commit;
##  EXIT SQL.SQLCODE ;
##  SQLREBUILDEOF
##  status=$?
##  YMDHMS=`date "+%Y/%m/%d %H:%M:%S"`
##  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Index rebuild Finished: ${status} "
##  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Index rebuild Finished: ${status} "  >> ${ERRLOGFIL}
##  LogDetailIns "E" "I" "${CMD} : SystemID=${SYSTEM_ID} Index rebuild Finished ${YMDHMS},status=${status} "

# -----------------------------------------------------------------------------
## DB Stastic Update ; dbms_stats.gather_schema_stats     Run as Admin
#       This can be done by Infra Team .  Need to check with Infra Team
# -----------------------------------------------------------------------------
YMDHMS=`date "+%Y/%m/%d %H:%M:%S"`
echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Schema stats update start"
echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Schema stats update start"  >> ${ERRLOGFIL}
LogDetailIns "S" "I" "${CMD} : SystemID=${SYSTEM_ID} Schema stats update start  ${YMDHMS}"
sqlplus -s  ${DB_SID}ADM/${DB_SID}ADM@${DB_SID} << SQLSTATSEOF
SET LINESIZE 140
SET PAGESIZE 0
exec dbms_stats.gather_schema_stats('${DB_USER}', estimate_percent => 30, method_opt => 'for all columns size auto',cascade => TRUE);
commit;
EXIT SQL.SQLCODE ;
SQLSTATSEOF
status=$?
YMDHMS=`date "+%Y/%m/%d %H:%M:%S"`
echo "${YMDHMS} :${CMD} : Schema stats update Finished : Status= ${status}"
echo "${YMDHMS} :${CMD} : Schema stats update Finished : Status= ${status}" >> ${ERRLOGFIL}
LogDetailIns "E" "I" "${CMD} : SystemID=${SYSTEM_ID} Schema stats uodate Finished  ${YMDHMS}"


# -----------------------------------------------------------------------------  
#  End message
# -----------------------------------------------------------------------------  
YMDHMS=`date "+%Y/%m/%d %H:%M:%S"`
if [ $status -eq 0 ] ; then
  echo "${YMDHMS} :${CMD} :SystemID=${SYSTEM_ID} Table Purging SUCCESS "
  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID}Table Purging SUCCESS " >> ${ERRLOGFIL}
  LogDetailIns "E" "I" "${CMD} : SystemID=${SYSTEM_ID} Table Purging SUCCESS"
  exit ${EXIT_SUCCESS}
else
  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging ERROR : Status= ${status}"
  echo "${YMDHMS} :${CMD} : SystemID=${SYSTEM_ID} Table Purging ERROR : Status= ${status}" >> ${ERRLOGFIL}
  LogDetailIns "E" "E" "${CMD} : SystemID=${SYSTEM_ID} Table Purging ERROR"
  exit ${EXIT_ERROR}
fi

